#include <stdio.h>
#include <stdlib.h>

void dfs(char** grid, int row, int col, int numRows, int numCols) {
    if (row < 0 || row >= numRows || col < 0 || col >= numCols || grid[row][col] == '0') {
        return;
    }
    grid[row][col] = '0'; // Mark the current cell as visited (water)
    dfs(grid, row + 1, col, numRows, numCols); // Down
    dfs(grid, row - 1, col, numRows, numCols); // Up
    dfs(grid, row, col + 1, numRows, numCols); // Right
    dfs(grid, row, col - 1, numRows, numCols); // Left
}

int numIslands(char** grid, int numRows, int* numCols) {
    if (numRows == 0 || *numCols == 0) {
        return 0;
    }

    int islandCount = 0;
    for (int i = 0; i < numRows; i++) {
        for (int j = 0; j < *numCols; j++) {
            if (grid[i][j] == '1') {
                islandCount++;
                dfs(grid, i, j, numRows, *numCols); // Explore the entire island
            }
        }
    }
    return islandCount;
}

int main() {
    // Example 1
    char* grid1[] = {
        "11110",
        "11010",
        "11000",
        "00000"
    };
    int numRows1 = sizeof(grid1) / sizeof(grid1[0]);
    int numCols1 = strlen(grid1[0]);
    printf("Number of islands (Example 1): %d\n", numIslands(grid1, numRows1, &numCols1));

    // Example 2
    char* grid2[] = {
        "11000",
        "11000",
        "00100",
        "00011"
    };
    int numRows2 = sizeof(grid2) / sizeof(grid2[0]);
    int numCols2 = strlen(grid2[0]);
    printf("Number of islands (Example 2): %d\n", numIslands(grid2, numRows2, &numCols2));

    return 0;
}
